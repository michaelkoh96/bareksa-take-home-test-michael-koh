// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import (
	entity "bareksa-take-home-test-michael-koh/core/entity"

	mock "github.com/stretchr/testify/mock"
)

// TopicRepository is an autogenerated mock type for the TopicRepository type
type TopicRepository struct {
	mock.Mock
}

// GetTopicsBySerials provides a mock function with given fields: serials
func (_m *TopicRepository) GetTopicsBySerials(serials []string) ([]entity.Topic, error) {
	ret := _m.Called(serials)

	var r0 []entity.Topic
	if rf, ok := ret.Get(0).(func([]string) []entity.Topic); ok {
		r0 = rf(serials)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entity.Topic)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]string) error); ok {
		r1 = rf(serials)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type NewTopicRepositoryT interface {
	mock.TestingT
	Cleanup(func())
}

// NewTopicRepository creates a new instance of TopicRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTopicRepository(t NewTopicRepositoryT) *TopicRepository {
	mock := &TopicRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
